<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geovis.ai.service.SamplesMapper">
  <resultMap id="BaseResultMap" type="com.geovis.ai.model.Samples">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="classification_id" jdbcType="TINYINT" property="classificationId" />
    <result column="dataset_id" jdbcType="VARCHAR" property="datasetId" />
    <result column="resolution" jdbcType="VARCHAR" property="resolution" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="coordinate" jdbcType="VARCHAR" property="coordinate" />
    <result column="production_time" jdbcType="TIMESTAMP" property="productionTime" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="star_rating" jdbcType="INTEGER" property="starRating" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="buy_count" jdbcType="INTEGER" property="buyCount" />
    <result column="algorithms_count" jdbcType="INTEGER" property="algorithmsCount" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.geovis.ai.model.Samples">
    <result column="cover_url" jdbcType="LONGVARCHAR" property="coverUrl" />
    <result column="category" jdbcType="LONGVARCHAR" property="category" />
    <result column="source_type" jdbcType="LONGVARCHAR" property="sourceType" />
    <result column="data_source" jdbcType="LONGVARCHAR" property="dataSource" />
    <result column="imaging_type" jdbcType="LONGVARCHAR" property="imagingType" />
    <result column="image_urls" jdbcType="LONGVARCHAR" property="imageUrls" />
    <result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, user_id, classification_id, dataset_id, resolution, size, coordinate, 
    production_time, price, star_rating, comment_count, buy_count, algorithms_count, 
    status, is_del, created_at, updated_at
  </sql>
  <sql id="Blob_Column_List">
    cover_url, category, source_type, data_source, imaging_type, image_urls, introduction
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.geovis.ai.model.SamplesExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from samples
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.geovis.ai.model.SamplesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from samples
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from samples
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from samples
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.geovis.ai.model.SamplesExample">
    delete from samples
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.geovis.ai.model.Samples">
    insert into samples (id, title, user_id, 
      classification_id, dataset_id, resolution, 
      size, coordinate, production_time, 
      price, star_rating, comment_count, 
      buy_count, algorithms_count, status, 
      is_del, created_at, updated_at, 
      cover_url, category, source_type, 
      data_source, imaging_type, image_urls, 
      introduction)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{classificationId,jdbcType=TINYINT}, #{datasetId,jdbcType=VARCHAR}, #{resolution,jdbcType=VARCHAR}, 
      #{size,jdbcType=VARCHAR}, #{coordinate,jdbcType=VARCHAR}, #{productionTime,jdbcType=TIMESTAMP}, 
      #{price,jdbcType=INTEGER}, #{starRating,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER}, 
      #{buyCount,jdbcType=INTEGER}, #{algorithmsCount,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{isDel,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{coverUrl,jdbcType=LONGVARCHAR}, #{category,jdbcType=LONGVARCHAR}, #{sourceType,jdbcType=LONGVARCHAR}, 
      #{dataSource,jdbcType=LONGVARCHAR}, #{imagingType,jdbcType=LONGVARCHAR}, #{imageUrls,jdbcType=LONGVARCHAR}, 
      #{introduction,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.geovis.ai.model.Samples">
    insert into samples
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="classificationId != null">
        classification_id,
      </if>
      <if test="datasetId != null">
        dataset_id,
      </if>
      <if test="resolution != null">
        resolution,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="coordinate != null">
        coordinate,
      </if>
      <if test="productionTime != null">
        production_time,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="starRating != null">
        star_rating,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="buyCount != null">
        buy_count,
      </if>
      <if test="algorithmsCount != null">
        algorithms_count,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="coverUrl != null">
        cover_url,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="sourceType != null">
        source_type,
      </if>
      <if test="dataSource != null">
        data_source,
      </if>
      <if test="imagingType != null">
        imaging_type,
      </if>
      <if test="imageUrls != null">
        image_urls,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="classificationId != null">
        #{classificationId,jdbcType=TINYINT},
      </if>
      <if test="datasetId != null">
        #{datasetId,jdbcType=VARCHAR},
      </if>
      <if test="resolution != null">
        #{resolution,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="coordinate != null">
        #{coordinate,jdbcType=VARCHAR},
      </if>
      <if test="productionTime != null">
        #{productionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="starRating != null">
        #{starRating,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="buyCount != null">
        #{buyCount,jdbcType=INTEGER},
      </if>
      <if test="algorithmsCount != null">
        #{algorithmsCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="coverUrl != null">
        #{coverUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=LONGVARCHAR},
      </if>
      <if test="sourceType != null">
        #{sourceType,jdbcType=LONGVARCHAR},
      </if>
      <if test="dataSource != null">
        #{dataSource,jdbcType=LONGVARCHAR},
      </if>
      <if test="imagingType != null">
        #{imagingType,jdbcType=LONGVARCHAR},
      </if>
      <if test="imageUrls != null">
        #{imageUrls,jdbcType=LONGVARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.geovis.ai.model.SamplesExample" resultType="java.lang.Long">
    select count(*) from samples
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update samples
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.classificationId != null">
        classification_id = #{record.classificationId,jdbcType=TINYINT},
      </if>
      <if test="record.datasetId != null">
        dataset_id = #{record.datasetId,jdbcType=VARCHAR},
      </if>
      <if test="record.resolution != null">
        resolution = #{record.resolution,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.coordinate != null">
        coordinate = #{record.coordinate,jdbcType=VARCHAR},
      </if>
      <if test="record.productionTime != null">
        production_time = #{record.productionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.starRating != null">
        star_rating = #{record.starRating,jdbcType=INTEGER},
      </if>
      <if test="record.commentCount != null">
        comment_count = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.buyCount != null">
        buy_count = #{record.buyCount,jdbcType=INTEGER},
      </if>
      <if test="record.algorithmsCount != null">
        algorithms_count = #{record.algorithmsCount,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.coverUrl != null">
        cover_url = #{record.coverUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sourceType != null">
        source_type = #{record.sourceType,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.dataSource != null">
        data_source = #{record.dataSource,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.imagingType != null">
        imaging_type = #{record.imagingType,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.imageUrls != null">
        image_urls = #{record.imageUrls,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update samples
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      classification_id = #{record.classificationId,jdbcType=TINYINT},
      dataset_id = #{record.datasetId,jdbcType=VARCHAR},
      resolution = #{record.resolution,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=VARCHAR},
      coordinate = #{record.coordinate,jdbcType=VARCHAR},
      production_time = #{record.productionTime,jdbcType=TIMESTAMP},
      price = #{record.price,jdbcType=INTEGER},
      star_rating = #{record.starRating,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      buy_count = #{record.buyCount,jdbcType=INTEGER},
      algorithms_count = #{record.algorithmsCount,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      is_del = #{record.isDel,jdbcType=TINYINT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      cover_url = #{record.coverUrl,jdbcType=LONGVARCHAR},
      category = #{record.category,jdbcType=LONGVARCHAR},
      source_type = #{record.sourceType,jdbcType=LONGVARCHAR},
      data_source = #{record.dataSource,jdbcType=LONGVARCHAR},
      imaging_type = #{record.imagingType,jdbcType=LONGVARCHAR},
      image_urls = #{record.imageUrls,jdbcType=LONGVARCHAR},
      introduction = #{record.introduction,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update samples
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      classification_id = #{record.classificationId,jdbcType=TINYINT},
      dataset_id = #{record.datasetId,jdbcType=VARCHAR},
      resolution = #{record.resolution,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=VARCHAR},
      coordinate = #{record.coordinate,jdbcType=VARCHAR},
      production_time = #{record.productionTime,jdbcType=TIMESTAMP},
      price = #{record.price,jdbcType=INTEGER},
      star_rating = #{record.starRating,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      buy_count = #{record.buyCount,jdbcType=INTEGER},
      algorithms_count = #{record.algorithmsCount,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      is_del = #{record.isDel,jdbcType=TINYINT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.geovis.ai.model.Samples">
    update samples
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="classificationId != null">
        classification_id = #{classificationId,jdbcType=TINYINT},
      </if>
      <if test="datasetId != null">
        dataset_id = #{datasetId,jdbcType=VARCHAR},
      </if>
      <if test="resolution != null">
        resolution = #{resolution,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="coordinate != null">
        coordinate = #{coordinate,jdbcType=VARCHAR},
      </if>
      <if test="productionTime != null">
        production_time = #{productionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="starRating != null">
        star_rating = #{starRating,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="buyCount != null">
        buy_count = #{buyCount,jdbcType=INTEGER},
      </if>
      <if test="algorithmsCount != null">
        algorithms_count = #{algorithmsCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="coverUrl != null">
        cover_url = #{coverUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=LONGVARCHAR},
      </if>
      <if test="sourceType != null">
        source_type = #{sourceType,jdbcType=LONGVARCHAR},
      </if>
      <if test="dataSource != null">
        data_source = #{dataSource,jdbcType=LONGVARCHAR},
      </if>
      <if test="imagingType != null">
        imaging_type = #{imagingType,jdbcType=LONGVARCHAR},
      </if>
      <if test="imageUrls != null">
        image_urls = #{imageUrls,jdbcType=LONGVARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.geovis.ai.model.Samples">
    update samples
    set title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      classification_id = #{classificationId,jdbcType=TINYINT},
      dataset_id = #{datasetId,jdbcType=VARCHAR},
      resolution = #{resolution,jdbcType=VARCHAR},
      size = #{size,jdbcType=VARCHAR},
      coordinate = #{coordinate,jdbcType=VARCHAR},
      production_time = #{productionTime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=INTEGER},
      star_rating = #{starRating,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      buy_count = #{buyCount,jdbcType=INTEGER},
      algorithms_count = #{algorithmsCount,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      is_del = #{isDel,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      cover_url = #{coverUrl,jdbcType=LONGVARCHAR},
      category = #{category,jdbcType=LONGVARCHAR},
      source_type = #{sourceType,jdbcType=LONGVARCHAR},
      data_source = #{dataSource,jdbcType=LONGVARCHAR},
      imaging_type = #{imagingType,jdbcType=LONGVARCHAR},
      image_urls = #{imageUrls,jdbcType=LONGVARCHAR},
      introduction = #{introduction,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.geovis.ai.model.Samples">
    update samples
    set title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      classification_id = #{classificationId,jdbcType=TINYINT},
      dataset_id = #{datasetId,jdbcType=VARCHAR},
      resolution = #{resolution,jdbcType=VARCHAR},
      size = #{size,jdbcType=VARCHAR},
      coordinate = #{coordinate,jdbcType=VARCHAR},
      production_time = #{productionTime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=INTEGER},
      star_rating = #{starRating,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      buy_count = #{buyCount,jdbcType=INTEGER},
      algorithms_count = #{algorithmsCount,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      is_del = #{isDel,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>