<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geovis.ai.service.UsersMapper">
  <resultMap id="BaseResultMap" type="com.geovis.ai.model.Users">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="actual_name" jdbcType="VARCHAR" property="actualName" />
    <result column="ID_card_num" jdbcType="VARCHAR" property="idCardNum" />
    <result column="ID_card_url" jdbcType="VARCHAR" property="idCardUrl" />
    <result column="business_name" jdbcType="VARCHAR" property="businessName" />
    <result column="business_license_num" jdbcType="VARCHAR" property="businessLicenseNum" />
    <result column="business_license_url" jdbcType="VARCHAR" property="businessLicenseUrl" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.geovis.ai.model.Users">
    <result column="signature" jdbcType="LONGVARCHAR" property="signature" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, user_name, sex, email, phone, nickname, avatar_url, company, position, 
    actual_name, ID_card_num, ID_card_url, business_name, business_license_num, business_license_url, 
    type_id, status, created_at, updated_at
  </sql>
  <sql id="Blob_Column_List">
    signature
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.geovis.ai.model.UsersExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.geovis.ai.model.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.geovis.ai.model.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.geovis.ai.model.Users">
    insert into users (id, user_id, user_name, 
      sex, email, phone, 
      nickname, avatar_url, company, 
      position, actual_name, ID_card_num, 
      ID_card_url, business_name, business_license_num, 
      business_license_url, type_id, status, 
      created_at, updated_at, signature
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{position,jdbcType=VARCHAR}, #{actualName,jdbcType=VARCHAR}, #{idCardNum,jdbcType=VARCHAR}, 
      #{idCardUrl,jdbcType=VARCHAR}, #{businessName,jdbcType=VARCHAR}, #{businessLicenseNum,jdbcType=VARCHAR}, 
      #{businessLicenseUrl,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{signature,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.geovis.ai.model.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="actualName != null">
        actual_name,
      </if>
      <if test="idCardNum != null">
        ID_card_num,
      </if>
      <if test="idCardUrl != null">
        ID_card_url,
      </if>
      <if test="businessName != null">
        business_name,
      </if>
      <if test="businessLicenseNum != null">
        business_license_num,
      </if>
      <if test="businessLicenseUrl != null">
        business_license_url,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="signature != null">
        signature,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="actualName != null">
        #{actualName,jdbcType=VARCHAR},
      </if>
      <if test="idCardNum != null">
        #{idCardNum,jdbcType=VARCHAR},
      </if>
      <if test="idCardUrl != null">
        #{idCardUrl,jdbcType=VARCHAR},
      </if>
      <if test="businessName != null">
        #{businessName,jdbcType=VARCHAR},
      </if>
      <if test="businessLicenseNum != null">
        #{businessLicenseNum,jdbcType=VARCHAR},
      </if>
      <if test="businessLicenseUrl != null">
        #{businessLicenseUrl,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.geovis.ai.model.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarUrl != null">
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.actualName != null">
        actual_name = #{record.actualName,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardNum != null">
        ID_card_num = #{record.idCardNum,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardUrl != null">
        ID_card_url = #{record.idCardUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.businessName != null">
        business_name = #{record.businessName,jdbcType=VARCHAR},
      </if>
      <if test="record.businessLicenseNum != null">
        business_license_num = #{record.businessLicenseNum,jdbcType=VARCHAR},
      </if>
      <if test="record.businessLicenseUrl != null">
        business_license_url = #{record.businessLicenseUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.signature != null">
        signature = #{record.signature,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update users
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      actual_name = #{record.actualName,jdbcType=VARCHAR},
      ID_card_num = #{record.idCardNum,jdbcType=VARCHAR},
      ID_card_url = #{record.idCardUrl,jdbcType=VARCHAR},
      business_name = #{record.businessName,jdbcType=VARCHAR},
      business_license_num = #{record.businessLicenseNum,jdbcType=VARCHAR},
      business_license_url = #{record.businessLicenseUrl,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      signature = #{record.signature,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      actual_name = #{record.actualName,jdbcType=VARCHAR},
      ID_card_num = #{record.idCardNum,jdbcType=VARCHAR},
      ID_card_url = #{record.idCardUrl,jdbcType=VARCHAR},
      business_name = #{record.businessName,jdbcType=VARCHAR},
      business_license_num = #{record.businessLicenseNum,jdbcType=VARCHAR},
      business_license_url = #{record.businessLicenseUrl,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.geovis.ai.model.Users">
    update users
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="actualName != null">
        actual_name = #{actualName,jdbcType=VARCHAR},
      </if>
      <if test="idCardNum != null">
        ID_card_num = #{idCardNum,jdbcType=VARCHAR},
      </if>
      <if test="idCardUrl != null">
        ID_card_url = #{idCardUrl,jdbcType=VARCHAR},
      </if>
      <if test="businessName != null">
        business_name = #{businessName,jdbcType=VARCHAR},
      </if>
      <if test="businessLicenseNum != null">
        business_license_num = #{businessLicenseNum,jdbcType=VARCHAR},
      </if>
      <if test="businessLicenseUrl != null">
        business_license_url = #{businessLicenseUrl,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.geovis.ai.model.Users">
    update users
    set user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      actual_name = #{actualName,jdbcType=VARCHAR},
      ID_card_num = #{idCardNum,jdbcType=VARCHAR},
      ID_card_url = #{idCardUrl,jdbcType=VARCHAR},
      business_name = #{businessName,jdbcType=VARCHAR},
      business_license_num = #{businessLicenseNum,jdbcType=VARCHAR},
      business_license_url = #{businessLicenseUrl,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      signature = #{signature,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.geovis.ai.model.Users">
    update users
    set user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      actual_name = #{actualName,jdbcType=VARCHAR},
      ID_card_num = #{idCardNum,jdbcType=VARCHAR},
      ID_card_url = #{idCardUrl,jdbcType=VARCHAR},
      business_name = #{businessName,jdbcType=VARCHAR},
      business_license_num = #{businessLicenseNum,jdbcType=VARCHAR},
      business_license_url = #{businessLicenseUrl,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>