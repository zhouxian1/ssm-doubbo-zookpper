<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geovis.ai.service.DemandsMapper">
  <resultMap id="BaseResultMap" type="com.geovis.ai.model.Demands">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="classid" jdbcType="INTEGER" property="classid" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="star_rating" jdbcType="INTEGER" property="starRating" />
    <result column="bidding_cycle" jdbcType="VARCHAR" property="biddingCycle" />
    <result column="bidding_time" jdbcType="TIMESTAMP" property="biddingTime" />
    <result column="deliver_cycle" jdbcType="VARCHAR" property="deliverCycle" />
    <result column="deliver_time" jdbcType="TIMESTAMP" property="deliverTime" />
    <result column="bidding_count" jdbcType="INTEGER" property="biddingCount" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="schedule" jdbcType="TINYINT" property="schedule" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.geovis.ai.model.Demands">
    <result column="cover_url" jdbcType="LONGVARCHAR" property="coverUrl" />
    <result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="bidding_intro" jdbcType="LONGVARCHAR" property="biddingIntro" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, user_id, classid, type, star_rating, bidding_cycle, bidding_time, deliver_cycle, 
    deliver_time, bidding_count, comment_count, status, price, schedule, is_del, created_at, 
    updated_at
  </sql>
  <sql id="Blob_Column_List">
    cover_url, introduction, content, bidding_intro
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.geovis.ai.model.DemandsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from demands
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.geovis.ai.model.DemandsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from demands
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from demands
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from demands
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.geovis.ai.model.DemandsExample">
    delete from demands
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.geovis.ai.model.Demands">
    insert into demands (id, title, user_id, 
      classid, type, star_rating, 
      bidding_cycle, bidding_time, deliver_cycle, 
      deliver_time, bidding_count, comment_count, 
      status, price, schedule, 
      is_del, created_at, updated_at, 
      cover_url, introduction, content, 
      bidding_intro)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{classid,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{starRating,jdbcType=INTEGER}, 
      #{biddingCycle,jdbcType=VARCHAR}, #{biddingTime,jdbcType=TIMESTAMP}, #{deliverCycle,jdbcType=VARCHAR}, 
      #{deliverTime,jdbcType=TIMESTAMP}, #{biddingCount,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{price,jdbcType=INTEGER}, #{schedule,jdbcType=TINYINT}, 
      #{isDel,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{coverUrl,jdbcType=LONGVARCHAR}, #{introduction,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR}, 
      #{biddingIntro,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.geovis.ai.model.Demands">
    insert into demands
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="classid != null">
        classid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="starRating != null">
        star_rating,
      </if>
      <if test="biddingCycle != null">
        bidding_cycle,
      </if>
      <if test="biddingTime != null">
        bidding_time,
      </if>
      <if test="deliverCycle != null">
        deliver_cycle,
      </if>
      <if test="deliverTime != null">
        deliver_time,
      </if>
      <if test="biddingCount != null">
        bidding_count,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="schedule != null">
        schedule,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="coverUrl != null">
        cover_url,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="biddingIntro != null">
        bidding_intro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="starRating != null">
        #{starRating,jdbcType=INTEGER},
      </if>
      <if test="biddingCycle != null">
        #{biddingCycle,jdbcType=VARCHAR},
      </if>
      <if test="biddingTime != null">
        #{biddingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deliverCycle != null">
        #{deliverCycle,jdbcType=VARCHAR},
      </if>
      <if test="deliverTime != null">
        #{deliverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="biddingCount != null">
        #{biddingCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="schedule != null">
        #{schedule,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="coverUrl != null">
        #{coverUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="biddingIntro != null">
        #{biddingIntro,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.geovis.ai.model.DemandsExample" resultType="java.lang.Long">
    select count(*) from demands
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update demands
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.classid != null">
        classid = #{record.classid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.starRating != null">
        star_rating = #{record.starRating,jdbcType=INTEGER},
      </if>
      <if test="record.biddingCycle != null">
        bidding_cycle = #{record.biddingCycle,jdbcType=VARCHAR},
      </if>
      <if test="record.biddingTime != null">
        bidding_time = #{record.biddingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deliverCycle != null">
        deliver_cycle = #{record.deliverCycle,jdbcType=VARCHAR},
      </if>
      <if test="record.deliverTime != null">
        deliver_time = #{record.deliverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.biddingCount != null">
        bidding_count = #{record.biddingCount,jdbcType=INTEGER},
      </if>
      <if test="record.commentCount != null">
        comment_count = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.schedule != null">
        schedule = #{record.schedule,jdbcType=TINYINT},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.coverUrl != null">
        cover_url = #{record.coverUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.biddingIntro != null">
        bidding_intro = #{record.biddingIntro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update demands
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      classid = #{record.classid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      star_rating = #{record.starRating,jdbcType=INTEGER},
      bidding_cycle = #{record.biddingCycle,jdbcType=VARCHAR},
      bidding_time = #{record.biddingTime,jdbcType=TIMESTAMP},
      deliver_cycle = #{record.deliverCycle,jdbcType=VARCHAR},
      deliver_time = #{record.deliverTime,jdbcType=TIMESTAMP},
      bidding_count = #{record.biddingCount,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      price = #{record.price,jdbcType=INTEGER},
      schedule = #{record.schedule,jdbcType=TINYINT},
      is_del = #{record.isDel,jdbcType=TINYINT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      cover_url = #{record.coverUrl,jdbcType=LONGVARCHAR},
      introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR},
      bidding_intro = #{record.biddingIntro,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update demands
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      classid = #{record.classid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      star_rating = #{record.starRating,jdbcType=INTEGER},
      bidding_cycle = #{record.biddingCycle,jdbcType=VARCHAR},
      bidding_time = #{record.biddingTime,jdbcType=TIMESTAMP},
      deliver_cycle = #{record.deliverCycle,jdbcType=VARCHAR},
      deliver_time = #{record.deliverTime,jdbcType=TIMESTAMP},
      bidding_count = #{record.biddingCount,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      price = #{record.price,jdbcType=INTEGER},
      schedule = #{record.schedule,jdbcType=TINYINT},
      is_del = #{record.isDel,jdbcType=TINYINT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.geovis.ai.model.Demands">
    update demands
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="classid != null">
        classid = #{classid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="starRating != null">
        star_rating = #{starRating,jdbcType=INTEGER},
      </if>
      <if test="biddingCycle != null">
        bidding_cycle = #{biddingCycle,jdbcType=VARCHAR},
      </if>
      <if test="biddingTime != null">
        bidding_time = #{biddingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deliverCycle != null">
        deliver_cycle = #{deliverCycle,jdbcType=VARCHAR},
      </if>
      <if test="deliverTime != null">
        deliver_time = #{deliverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="biddingCount != null">
        bidding_count = #{biddingCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="schedule != null">
        schedule = #{schedule,jdbcType=TINYINT},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="coverUrl != null">
        cover_url = #{coverUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="biddingIntro != null">
        bidding_intro = #{biddingIntro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.geovis.ai.model.Demands">
    update demands
    set title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      classid = #{classid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      star_rating = #{starRating,jdbcType=INTEGER},
      bidding_cycle = #{biddingCycle,jdbcType=VARCHAR},
      bidding_time = #{biddingTime,jdbcType=TIMESTAMP},
      deliver_cycle = #{deliverCycle,jdbcType=VARCHAR},
      deliver_time = #{deliverTime,jdbcType=TIMESTAMP},
      bidding_count = #{biddingCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      price = #{price,jdbcType=INTEGER},
      schedule = #{schedule,jdbcType=TINYINT},
      is_del = #{isDel,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      cover_url = #{coverUrl,jdbcType=LONGVARCHAR},
      introduction = #{introduction,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      bidding_intro = #{biddingIntro,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.geovis.ai.model.Demands">
    update demands
    set title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      classid = #{classid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      star_rating = #{starRating,jdbcType=INTEGER},
      bidding_cycle = #{biddingCycle,jdbcType=VARCHAR},
      bidding_time = #{biddingTime,jdbcType=TIMESTAMP},
      deliver_cycle = #{deliverCycle,jdbcType=VARCHAR},
      deliver_time = #{deliverTime,jdbcType=TIMESTAMP},
      bidding_count = #{biddingCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      price = #{price,jdbcType=INTEGER},
      schedule = #{schedule,jdbcType=TINYINT},
      is_del = #{isDel,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>